{"ast":null,"code":"var _jsxFileName = \"/Users/trannguyen/Documents/todo-list-app/src/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { TextField, Button, Checkbox, List, ListItem, Container } from \"@mui/material\";\nimport './App.css';\nimport { red } from \"@mui/material/colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTasks] = useState(\"\");\n  function handleInputChange(event) {\n    setNewTasks(event.target.value);\n  }\n  function handleAddTask(event) {\n    if (newTask.trim() !== \"\") {\n      setTasks(t => [...t, {\n        text: newTask,\n        completed: false\n      }]);\n      setNewTasks(\"\");\n    }\n  }\n  function handleDeleteTask(index) {\n    setTasks(t => t.filter((_, i) => i !== index));\n  }\n  function handleCheckTask(index) {\n    setTasks(t => t.map((tasks, i) => i === index ? {\n      ...tasks,\n      completed: !tasks.completed\n    } : tasks));\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"Container\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      className: \"TextField\",\n      type: \"text\",\n      value: newTask,\n      placeholder: \"Please enter your task\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"AddButton\",\n      onClick: handleAddTask,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      className: \"List\",\n      children: [\" \", tasks.map((tasks, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        className: \"ListItem\",\n        style: {\n          color: tasks.completed ? \"gray\" : \"black\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          className: \"Checkbox\",\n          checked: tasks.completed,\n          onChange: () => handleCheckTask(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), tasks.text, /*#__PURE__*/_jsxDEV(Button, {\n          className: \"DelButton\",\n          onClick: () => handleDeleteTask(index),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"cw5r/Q1YJKD4nHat/RHG/o2bL8I=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","TextField","Button","Checkbox","List","ListItem","Container","red","jsxDEV","_jsxDEV","ToDoList","_s","tasks","setTasks","newTask","setNewTasks","handleInputChange","event","target","value","handleAddTask","trim","t","text","completed","handleDeleteTask","index","filter","_","i","handleCheckTask","map","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","checked","_c","$RefreshReg$"],"sources":["/Users/trannguyen/Documents/todo-list-app/src/ToDoList.js"],"sourcesContent":["\nimport React, {useState} from \"react\";\nimport { TextField, Button, Checkbox, List, ListItem, Container } from \"@mui/material\";\nimport './App.css';\nimport { red } from \"@mui/material/colors\";\n\n\nfunction ToDoList() {\nconst [tasks, setTasks] = useState([]);\nconst [newTask, setNewTasks] = useState (\"\");\n\nfunction handleInputChange(event){\n    setNewTasks(event.target.value);\n    \n}\n\nfunction handleAddTask(event){\n    if(newTask.trim() !== \"\"){\n        setTasks(t => [...t,{text: newTask, completed: false}])\n    setNewTasks(\"\");\n    }\n    \n}\n\nfunction handleDeleteTask(index){\n    setTasks(t => t.filter((_, i) => i !== index));\n}\n\nfunction handleCheckTask(index){\n    setTasks(t => t.map((tasks, i) => i === index ? {...tasks, completed: !tasks.completed} : tasks))\n\n}\nreturn(\n    <Container className=\"Container\">\n        <TextField className=\"TextField\" type =\"text\"\n                value ={newTask}\n                placeholder=\"Please enter your task\"\n                onChange={handleInputChange}/>\n\n        <Button className=\"AddButton\" onClick={handleAddTask}>\n                Add\n            </Button>\n        \n        <List className=\"List\"> {tasks.map((tasks, index) => \n        <ListItem className=\"ListItem\" key = {index} style ={{color: tasks.completed ? \"gray\" : \"black\"}}>\n            <Checkbox className=\"Checkbox\"\n                        \n                        checked = {tasks.completed}\n                        onChange={() => handleCheckTask(index)}/>\n            {tasks.text}\n            <Button className=\"DelButton\" onClick={() => handleDeleteTask(index)}\n                                            >\n                Delete\n            </Button>\n        </ListItem>\n            )}\n\n            \n        </List>\n    </Container>\n)\n}\n\nexport default ToDoList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}